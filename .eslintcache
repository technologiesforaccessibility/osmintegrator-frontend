[{"/home/adam/DEV/TFA/osmintegrator-frontend/src/index.js":"1","/home/adam/DEV/TFA/osmintegrator-frontend/src/reportWebVitals.js":"2","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/App.js":"3","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/MapView.js":"4","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Login.js":"5","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Auth.js":"6","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Recover.js":"7","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/SetPassword.js":"8","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/utilities.js":"9","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/utilities-texts.js":"10","/home/adam/DEV/TFA/osmintegrator-frontend/src/config/apiConfig.js":"11","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Dashboard.js":"12","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/DashboardHeader.js":"13","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/DashboardSiderbar.js":"14","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/DashboardMain.js":"15","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/PropertyGrid.js":"16","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Logout.js":"17","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/ProfilePanel.js":"18","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/ChangeEmail.js":"19","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/ChangePassword.js":"20","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/ProfileRouter.js":"21"},{"size":636,"mtime":1611333467530,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1608307990210,"results":"24","hashOfConfig":"23"},{"size":478,"mtime":1613582554974,"results":"25","hashOfConfig":"23"},{"size":5526,"mtime":1613501407782,"results":"26","hashOfConfig":"23"},{"size":3776,"mtime":1613332464609,"results":"27","hashOfConfig":"23"},{"size":934,"mtime":1612121131763,"results":"28","hashOfConfig":"23"},{"size":3318,"mtime":1611078908886,"results":"29","hashOfConfig":"23"},{"size":4484,"mtime":1611080803702,"results":"30","hashOfConfig":"23"},{"size":1453,"mtime":1613466521961,"results":"31","hashOfConfig":"23"},{"size":577,"mtime":1611075865658,"results":"32","hashOfConfig":"23"},{"size":426,"mtime":1613236109122,"results":"33","hashOfConfig":"23"},{"size":3191,"mtime":1613582806938,"results":"34","hashOfConfig":"23"},{"size":1456,"mtime":1613331109229,"results":"35","hashOfConfig":"23"},{"size":3108,"mtime":1613583207030,"results":"36","hashOfConfig":"23"},{"size":2365,"mtime":1613331523009,"results":"37","hashOfConfig":"23"},{"size":1164,"mtime":1613376676282,"results":"38","hashOfConfig":"23"},{"size":1105,"mtime":1613331208965,"results":"39","hashOfConfig":"23"},{"size":653,"mtime":1613582806922,"results":"40","hashOfConfig":"23"},{"size":229,"mtime":1613582271210,"results":"41","hashOfConfig":"23"},{"size":238,"mtime":1613582271218,"results":"42","hashOfConfig":"23"},{"size":1066,"mtime":1613582827522,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"vvmsdu",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"47"},"/home/adam/DEV/TFA/osmintegrator-frontend/src/index.js",["95"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["96","97"],"/home/adam/DEV/TFA/osmintegrator-frontend/src/reportWebVitals.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/App.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/MapView.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Login.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Auth.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Recover.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/SetPassword.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/utilities.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/utilities-texts.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/config/apiConfig.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Dashboard.js",["98","99","100","101","102"],"import React, {Component} from 'react';\nimport \"./dashboard.scss\"\n\nimport DashboardHeader from \"./DashboardHeader\";\nimport DashboardSiderbar from \"./DashboardSiderbar\";\nimport DashboardMain from \"./DashboardMain\";\nimport axios from \"axios\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Recover from \"./Recover\";\nimport Logout from \"./Logout\";\nimport SetPassword from \"./SetPassword\";\nimport ProfilePanel from \"./ProfilePanel\";\nimport ProfileRouter from \"./ProfileRouter\";\n\nconst {REACT_APP_HAS_ACCESS_PATH} = process.env;\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            canConnectStops: false,\n            propertyGrid: null\n        }\n    }\n\n    componentDidMount() {\n        this.hasAccess();\n    }\n\n    hasAccess = () => {\n        const url = REACT_APP_HAS_ACCESS_PATH;\n        axios.get(url,\n            {\n                headers: {\n                    Authorization: `Bearer ${localStorage.token}`,\n                    'Cache-Control': 'no-cache',\n                    'Content-Type': 'application/json',\n                    \"Access-Control-Allow-Origin\": \"*\"\n                }\n            })\n            .then(resp => {\n                if (resp.status === 200) {\n                    console.log(\"Protected\");\n                    this.setState({isLoggedIn: true});\n                } else {\n                    console.log(\"Token error\")\n                }\n            })\n            .catch((error) => {\n                if (error.response.status === 401) {\n                    console.log(\"Another token error\")\n\n                }\n            })\n    }\n\n    canConnectBusStops = (bool) => {\n        this.setState({canConnectStops: bool})\n    }\n\n    setPropertyGrid = (busStopProps) => {\n        if (busStopProps) {\n            this.setState({propertyGrid: busStopProps})\n        } else {\n            this.setState({propertyGrid: null})\n        }\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <DashboardHeader isLoggedIn={this.state.isLoggedIn}/>\n\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <DashboardSiderbar isLoggedIn={this.state.isLoggedIn}\n                                           connectBusStops={this.canConnectBusStops}\n                                           propertyGrid={this.state.propertyGrid}/>\n                        <Switch>\n                            <Route path=\"/profile\" component={ProfileRouter}/>\n                            <Route path=\"/\" component={DashboardMain} canConnectBusStops={this.state.canConnectStops}\n                                   setPropertyGrid={this.setPropertyGrid}/>\n                        </Switch>\n                    </div>\n                </div>\n\n\n                <script src=\"https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js\"\n                        integrity=\"sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE\"\n                        crossOrigin=\"anonymous\"/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Dashboard;","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/DashboardHeader.js",["103"],"import React, {Component} from 'react';\n\nconst {REACT_APP_LOGIN_PATH, REACT_APP_LOGOUT_PATH} = process.env;\n\nclass DashboardHeader extends Component {\n        constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <a href={window.location.href} className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\">Osm Integrator</a>\n                    <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\"\n                            data-bs-toggle=\"collapse\" data-bs-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\"\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <input className=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\"\n                           aria-label=\"Search\"/>\n                    <ul className=\"navbar-nav px-3\">\n                        <li className=\"nav-item text-nowrap\">\n                            {this.props.isLoggedIn ? <a className=\"nav-link\" href={REACT_APP_LOGOUT_PATH} >Sign out</a> : <a className=\"nav-link\" href={REACT_APP_LOGIN_PATH} >Log in</a>}\n                        </li>\n                    </ul>\n                </header>\n        );\n    }\n}\n\nexport default DashboardHeader;","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/DashboardSiderbar.js",["104"],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/DashboardMain.js",["105"],"import React, {Component} from 'react';\nimport MapView from \"./MapView\";\n\nclass DashboardMain extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n\n            <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n                <div\n                    className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                    <h1 className=\"h2\">OSM Integrator</h1>\n                    <div className=\"btn-toolbar mb-2 mb-md-0\">\n                        <div className=\"btn-group me-2\">\n                            <div className=\"dropdown\">\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                        id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                        aria-expanded=\"false\">\n                                    Choose tile to work with\n                                </button>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                    <a className=\"dropdown-item\" href=\"/\">Katowice</a>\n                                    <a className=\"dropdown-item\" href=\"/\">Gliwice</a>\n                                    <a className=\"dropdown-item\" href=\"/\">Bytom</a>\n                                </div>\n                            </div>\n                            <button type=\"button\" className=\"btn btn-sm btn-secondary\">Save\n                            </button>\n                            <button type=\"button\" className=\"btn btn-sm btn-secondary\">Edit\n                            </button>\n                        </div>\n                        <button type=\"button\" className=\"btn btn-sm btn-secondary dropdown-toggle\">\n                            <span data-feather=\"calendar\"></span>\n                            Mode\n                        </button>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"forMapView\">\n                        <MapView canConnectBusStops={this.props.canConnectBusStops} setPropertyGrid={this.props.setPropertyGrid}/>\n                    </div>\n                </div>\n\n\n            </main>\n        );\n    }\n}\n\nexport default DashboardMain;","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/PropertyGrid.js",["106"],"import React, {Component} from 'react';\nimport './propertyGrid.scss';\n\nclass PropertyGrid extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const grid = this.props.propertyGrid;\n        const newPropertyGrid = Object.entries(grid).map((propertyPair) => ({\n            propkey: propertyPair[0],\n            propvalue: ((typeof propertyPair[1] === \"boolean\" || propertyPair[1] === null ) ? JSON.stringify(propertyPair[1]) : propertyPair[1] )\n        }));\n        return (\n            <div>\n                <p className=\"reds\">Property window</p>\n                <div className=\"propertyGrid-frame\">\n                    <p> Add new | Edit | Remove </p>\n                    {newPropertyGrid.map((prop, index) => (\n                            <div key={index} className=\"propertyGrid-row\">\n                                <div className=\"propertyGrid-key\">{prop.propkey}</div>\n                                <div className=\"propertyGrid-value\">{prop.propvalue}</div>\n                            </div>\n                        ))}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default PropertyGrid;","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/Logout.js",["107"],"import React, {Component} from 'react';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport colors from \"./colors.module.scss\";\n\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            message: \"You will be redirect to login page soon.\"\n        }\n    }\n\n\n    componentDidMount() {\n        setTimeout(() => this.proceedLogOut(), 7000);\n    }\n\n    proceedLogOut = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('tokenRefresh');\n        this.setState({shouldRedirect: true})\n    }\n\n    render() {\n        if (this.state.shouldRedirect) {\n            return <Redirect to=\"/auth/login\"/>\n        }\n\n        return (\n            <React.Fragment>\n                <h1 className=\"auth-title\">You have been logged out</h1>\n                <div className=\"auth-info-placeholder centered\" value=\"\">\n                    <span style={{paddingTop: \"10px\", color: colors['colorMessageSuccess']}}>{this.state.message}</span>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Logout;","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/ProfilePanel.js",["108"],"import React, {Component} from 'react';\nimport {NavLink} from \"react-router-dom\";\n\n\nclass ProfilePanel extends Component {\n    render() {\n        return (\n\n                    <ul>\n                        <li>\n                            <NavLink to=\"/profile/change-email\">Change e-mail</NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/profile/change-password\">Change password</NavLink>\n\n                        </li>\n                        <li>\n                            About you\n                        </li>\n                    </ul>\n\n        );\n    }\n}\n\nexport default ProfilePanel;","/home/adam/DEV/TFA/osmintegrator-frontend/src/components/ChangeEmail.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/ChangePassword.js",[],"/home/adam/DEV/TFA/osmintegrator-frontend/src/components/ProfileRouter.js",["109","110"],"import React, {Component} from 'react';\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport DashboardMain from \"./DashboardMain\";\nimport ChangeEmail from \"./ChangeEmail\";\nimport ChangePassword from \"./ChangePassword\";\nimport ProfilePanel from \"./ProfilePanel\";\n\nclass ProfileRouter extends Component {\n    render() {\n        return (\n            <div className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n                <div\n                    className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                    Profile\n                </div>\n                <div>\n                    <Switch>\n                        <Route path=\"/profile/change-email\" exact component={ChangeEmail}/>\n                        <Route path=\"/profile/change-password\" exact component={ChangePassword}/>\n                        <Route path=\"/profile\" exact component={ProfilePanel}/>\n                    </Switch>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ProfileRouter;",{"ruleId":"111","severity":1,"message":"112","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":14},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":13},{"ruleId":"111","severity":1,"message":"120","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":15},{"ruleId":"111","severity":1,"message":"121","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":14},{"ruleId":"111","severity":1,"message":"122","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":19},{"ruleId":"111","severity":1,"message":"123","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":6,"column":9,"nodeType":"126","messageId":"127","endLine":8,"endColumn":6},{"ruleId":"124","severity":1,"message":"125","line":6,"column":5,"nodeType":"126","messageId":"127","endLine":8,"endColumn":6},{"ruleId":"124","severity":1,"message":"125","line":5,"column":5,"nodeType":"126","messageId":"127","endLine":7,"endColumn":6},{"ruleId":"124","severity":1,"message":"125","line":5,"column":5,"nodeType":"126","messageId":"127","endLine":7,"endColumn":6},{"ruleId":"111","severity":1,"message":"128","line":2,"column":9,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"129","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":21},{"ruleId":"111","severity":1,"message":"128","line":2,"column":9,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"129","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":21},"no-unused-vars","'Popper' is defined but never used.","Identifier","unusedVar","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"'Login' is defined but never used.","'Recover' is defined but never used.","'Logout' is defined but never used.","'SetPassword' is defined but never used.","'ProfilePanel' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'NavLink' is defined but never used.","'DashboardMain' is defined but never used.","no-global-assign","no-unsafe-negation"]